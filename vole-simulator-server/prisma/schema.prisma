generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Classroom {
  id          Int         @id @default(autoincrement())
  name        String
  classCode   String      @unique
  teacher     User        @relation(name: "Teacher", fields: [teacherId], references: [id])
  teacherId   Int
  students    User[]      @relation(name: "Students")
  assignments Assignment[]
  exercises   Exercise[]
}


model User {
  id          Int         @id @default(autoincrement())
  email       String      @unique
  password    String
  firstName   String
  lastName    String
  role        String      @default("STUDENT")
  createdExercises Exercise[] @relation("ExerciseCreator")
  assignments Assignment[]
  classrooms  Classroom[] @relation("Teacher")
  enrollments Classroom[] @relation("Students")
}

model Assignment {
  id          Int         @id @default(autoincrement())
  exercise    Exercise    @relation(fields: [exerciseId], references: [id])
  exerciseId  Int
  assignedTo  User        @relation(fields: [userId], references: [id])
  userId      Int
  classroom   Classroom   @relation(fields: [classroomId], references: [id])
  classroomId Int
  status      String      @default("UNCOMPLETED")
  result      String?     
}


model Exercise {
  id                   Int          @id @default(autoincrement())
  name                 String
  description          String
  randomCell           String?     
  resultCell           String       
  resultValue          String       
  cycleConstraint      Int?
  mustUseInstructions  String
  creator              User         @relation("ExerciseCreator", fields: [creatorId], references: [id])
  creatorId            Int
  classroom            Classroom    @relation(fields: [classroomId], references: [id])
  classroomId          Int
  assignments          Assignment[]
}


